package com.odsaprojects.prod.entities;
// Generated 07-feb-2018 21:45:12 by Hibernate Tools 5.1.4.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;

import java.io.Serializable;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * Equipos generated by hbm2java
 */
@Entity
@Table(name = "equipos")
@NamedQueries({ @NamedQuery(name = "Equipos.findAll", query = "SELECT e FROM Equipos e WHERE e.estado = 1"),
	@NamedQuery(name = "Equipos.findByNombre", query = "SELECT e FROM Equipos e WHERE e.nombre LIKE :nombre"),
	@NamedQuery(name = "Equipos.findById", query = "SELECT e FROM Equipos e WHERE e.id = :id"),
	@NamedQuery(name = "Equipos.findByIdDirector", query = "SELECT e FROM Equipos e WHERE e.directores.id = :idDirector AND e.estado = 1"),
	@NamedQuery(name = "Equipos.findAllNoSinEquipo", query = "SELECT e FROM Equipos e INNER JOIN e.directores d INNER JOIN "
			+ "d.usuarios u WHERE u.id = :idUsuario AND e.estado = 1 AND e.id != :id"),
	@NamedQuery(name = "Equipos.findByIdUsuario", query = "SELECT e FROM Equipos e INNER JOIN e.directores d INNER JOIN "
			+ "d.usuarios u WHERE u.id = :idUsuario AND d.estado = 1")})
public class Equipos implements Serializable {

	private static final long serialVersionUID = 1L;
	private Long id;
	private Directores directores;
	private String nombre;
	private String abreviatura;
	private String logo;
	private int estado;
//	private List<Jugadores> jugadores;

	public Equipos() {
	}

	public Equipos(Directores directores, String nombre) {
		this.directores = directores;
		this.nombre = nombre;
	}

	public Equipos(Directores directores, String nombre, String abreviatura, String logo, int estado) {
		this.directores = directores;
		this.nombre = nombre;
		this.abreviatura = abreviatura;
		this.logo = logo;
		this.estado = estado;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@OneToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "idDirector", nullable = false)
	public Directores getDirectores() {
		return this.directores;
	}

	public void setDirectores(Directores directores) {
		this.directores = directores;
	}

	@Column(name = "nombre", nullable = false, length = 128)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "abreviatura", length = 5)
	public String getAbreviatura() {
		return this.abreviatura;
	}

	public void setAbreviatura(String abreviatura) {
		this.abreviatura = abreviatura;
	}

	@Column(name = "logo", length = 512)
	public String getLogo() {
		return this.logo;
	}

	public void setLogo(String logo) {
		this.logo = logo;
	}

	@Column(name = "estado", length = 1)
	public int getEstado() {
		return estado;
	}

	public void setEstado(int estado) {
		this.estado = estado;
	}

//	@OneToMany(fetch = FetchType.EAGER, cascade=CascadeType.PERSIST)
//	@JoinColumn(name = "idEquipos")
//	public List<Jugadores> getJugadores() {
//		return jugadores;
//	}
//
//	public void setJugadores(List<Jugadores> jugadores) {
//		this.jugadores = jugadores;
//	}

}
